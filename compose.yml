#services:
#  mysql_db:
#    image: mysql:latest
#    container_name: customer_db
#    environment:
#      MYSQL_ROOT_PASSWORD: rootpassword
#      MYSQL_DATABASE: customer_db
#      MYSQL_USER: user
#      MYSQL_PASSWORD: password
#    ports:
#      - "3306:3306"
#    volumes:
#      - mysql_data:/var/lib/mysql
#    healthcheck:
#      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#    networks:
#      - ecommerce_network
#
#  mongodb:
#    image: mongo:latest
#    container_name: product_db
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: rootpassword
#    ports:
#      - "27017:27017"
#    volumes:
#      - mongodb_data:/data/db
#    healthcheck:
#      test: [ "CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    networks:
#      - ecommerce_network
#
#  postgres_db:
#    image: postgres:latest
#    container_name: ecommerce_db
#    environment:
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: ecommerce_db
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    networks:
#      - ecommerce_network
#
#  customer:
#    build: ./customer-service
#    container_name: customer_service
#    ports:
#      - "8001:8000"
#    environment:
#      - MYSQL_DB_HOST=mysql_db
#      - MYSQL_DB_NAME=customer_db
#      - MYSQL_DB_USER=user
#      - MYSQL_DB_PASSWORD=password
#    depends_on:
#      mysql_db:
#        condition: service_healthy
#    volumes:
#      - ./customer-service:/app:cached
#    networks:
#      - ecommerce_network
#
#  product:
#    build: ./product-service
#    container_name: product_service
#    ports:
#      - "8002:8000"
#    environment:
#      - MONGO_URI=mongodb://root:rootpassword@mongodb:27017/
#      - MONGO_DB_NAME=product_db
#    depends_on:
#      mongodb:
#        condition: service_healthy
#    volumes:
#      - ./product-service:/app:cached
#    networks:
#      - ecommerce_network
#
#networks:
#  ecommerce_network:
#    driver: bridge
#
#volumes:
#  mysql_data:
#  mongodb_data:
#  postgres_data:


version: '3.8'

services:
  mysql_db:
    image: mysql:latest
    container_name: customer_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: customer_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce_network

  mongodb:
    image: mongo:latest
    container_name: product_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ecommerce_network

  postgres_db:
    image: postgres:latest
    container_name: ecommerce_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network

  customer:
    build: ./customer-service
    container_name: customer_service
    restart: always
    ports:
      - "8001:8000"
    env_file:
      - .env  # ✅ Loads environment variables from .env
    depends_on:
      mysql_db:
        condition: service_healthy
    volumes:
      - ./customer-service:/app:cached
    networks:
      - ecommerce_network

  product:
    build: ./product-service
    container_name: product_service
    restart: always
    ports:
      - "8002:8000"
    env_file:
      - .env  # ✅ Loads environment variables from .env
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./product-service:/app:cached
    networks:
      - ecommerce_network

networks:
  ecommerce_network:
    driver: bridge

volumes:
  mysql_data:
  mongodb_data:
  postgres_data:
